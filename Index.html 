<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Vik — Home</title>
<meta name="description" content="Vik — a small, friendly programming language & IDE. Neon green on black. Try it now." />
<style>
  :root{
    --bg:#000;
    --panel:#050505;
    --neon:#39FF14; /* neon green */
    --muted:#4a4a4a;
    --glass: rgba(255,255,255,0.02);
    --radius:12px;
    --mono: 'Courier New', Courier, monospace;
    --sans: Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  }
  html,body{height:100%;}
  body{
    margin:0;
    background:linear-gradient(180deg,#010101 0%, #020202 60%);
    color:var(--neon);
    font-family:var(--sans);
    -webkit-font-smoothing:antialiased;
    -moz-osx-font-smoothing:grayscale;
    padding:18px;
    box-sizing:border-box;
  }

  /* Container */
  .wrap{
    max-width:1150px;
    margin:0 auto;
  }

  header{
    display:flex;
    gap:16px;
    align-items:center;
    justify-content:space-between;
    margin-bottom:20px;
  }

  .brand{
    display:flex;
    gap:12px;
    align-items:center;
  }

  .logo{
    width:56px;height:56px;border-radius:12px;
    display:grid;place-items:center;
    background:linear-gradient(135deg, rgba(57,255,20,0.06), rgba(57,255,20,0.02));
    box-shadow:0 0 18px rgba(57,255,20,0.05) inset;
    border:1px solid rgba(57,255,20,0.08);
  }
  .logo svg{filter:drop-shadow(0 0 6px rgba(57,255,20,0.08));}

  .brand h1{font-size:18px;margin:0;color:var(--neon);letter-spacing:0.6px}
  .brand p{margin:0;font-size:12px;color:var(--muted)}

  nav{display:flex;gap:10px;align-items:center}
  .nav-link{
    padding:8px 12px;border-radius:8px;font-size:14px;
    color:var(--neon);text-decoration:none;border:1px solid rgba(57,255,20,0.06);
    background:transparent;
  }
  .cta{
    background:linear-gradient(90deg,rgba(57,255,20,0.06), rgba(57,255,20,0.03));
    border:1px solid rgba(57,255,20,0.12);
    padding:9px 14px;border-radius:10px;
    font-weight:700;
  }

  /* Hero */
  .hero{
    display:grid;
    grid-template-columns:1fr 420px;
    gap:20px;
    align-items:start;
    margin-bottom:20px;
  }
  .hero .card{
    background:var(--panel);
    padding:20px;border-radius:var(--radius);
    box-shadow:0 6px 30px rgba(0,0,0,0.6);
    border:1px solid rgba(255,255,255,0.02);
  }
  .hero h2{font-size:28px;margin:6px 0 6px;color:var(--neon)}
  .hero p.lead{color:#9ffb82;font-size:15px; margin-bottom:12px; opacity:0.9}

  .features{
    display:flex;flex-wrap:wrap;gap:12px;margin-top:12px;
  }
  .f{
    border-radius:10px;padding:10px;background:var(--glass);border:1px solid rgba(57,255,20,0.03);
    min-width:110px;font-size:13px;color:var(--neon);
  }

  /* Try Vik Editor */
  .editor{
    display:flex;flex-direction:column;height:100%;
  }
  textarea#vikcode{
    background:#050505;color:var(--neon);resize:vertical;min-height:160px;
    border-radius:8px;padding:12px;font-family:var(--mono);font-size:13px;border:1px solid rgba(57,255,20,0.06);
    outline:none;box-shadow:inset 0 0 40px rgba(57,255,20,0.02);
  }
  .runbar{display:flex;gap:8px;margin-top:10px;align-items:center;flex-wrap:wrap}
  .btn{
    padding:8px 12px;border-radius:8px;border:1px solid rgba(57,255,20,0.08);
    background:transparent;color:var(--neon);cursor:pointer;font-weight:600;
  }
  .output{
    background:#000;padding:12px;border-radius:8px;margin-top:12px;min-height:80px;border:1px solid rgba(255,255,255,0.02);
    font-family:var(--mono);font-size:13px;color:#bfffab;white-space:pre-wrap;
  }

  /* Sections */
  .grid{
    display:grid;grid-template-columns:repeat(3,1fr);gap:12px;margin-bottom:20px;
  }
  .card{
    background:var(--panel);padding:16px;border-radius:12px;border:1px solid rgba(255,255,255,0.02);
  }
  .card h3{margin:0 0 8px 0;color:var(--neon);font-size:16px}
  .muted{color:var(--muted);font-size:13px}

  footer{margin-top:30px;padding:12px;border-radius:10px;border:1px solid rgba(255,255,255,0.02);display:flex;justify-content:space-between;align-items:center}
  footer small{color:var(--muted)}

  /* Responsive */
  @media (max-width:920px){
    .hero{grid-template-columns:1fr;}
    .grid{grid-template-columns:1fr 1fr}
  }
  @media (max-width:560px){
    header{flex-direction:column;align-items:flex-start;gap:12px}
    .grid{grid-template-columns:1fr}
    .hero .card{padding:14px}
    .logo{width:48px;height:48px}
  }

  /* tiny code highlights */
  .tag{color:#a7ffb2}
  .kw{color:#b6ff9d}
  .str{color:#9adf9a}
</style>
</head>
<body>
  <div class="wrap">
    <header>
      <div class="brand">
        <div class="logo" aria-hidden="true">
          <!-- simple V icon -->
          <svg width="34" height="34" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3 4L12 20L21 4" stroke="#39FF14" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <div>
          <h1>Vik</h1>
          <p>lightweight scripting • Vik IDE</p>
        </div>
      </div>

      <nav>
        <a class="nav-link" href="#try">Try</a>
        <a class="nav-link" href="#docs">Docs</a>
        <a class="nav-link" href="#community">Community</a>
        <a class="nav-link cta" href="#download">Download</a>
      </nav>
    </header>

    <section class="hero">
      <div class="card">
        <h2>Vik — fast, simple, lovable scripting</h2>
        <p class="lead">Small language, big ideas. Designed for teaching, prototyping, and making quick interactive tools. Neon green on black — built for coders who like to feel the code.</p>

        <div class="features">
          <div class="f">Easy syntax</div>
          <div class="f">Inline prompts</div>
          <div class="f">Blocks & IDE</div>
          <div class="f">Tiny runtime</div>
          <div class="f">Portable</div>
        </div>

        <div style="margin-top:14px;display:flex;gap:10px;flex-wrap:wrap">
          <a class="nav-link cta" href="#try">Try Vik</a>
          <a class="nav-link" id="download" href="#" onclick="alert('Download placeholder — replace with your real URL')">Download APK</a>
          <a class="nav-link" href="#docs">Docs</a>
        </div>
      </div>

      <aside class="card">
        <h3 style="margin-top:0">Quick start</h3>
        <p class="muted">Sample Vik code (try it below):</p>
        <pre style="background:#000;padding:12px;border-radius:8px;margin-top:8px;color:#bfffab;font-family:var(--mono);font-size:13px">
say Welcome to Vik!
get name
say Hello, {name}
calc 12 + 5 * 2
        </pre>
        <p style="margin-top:10px" class="muted">Supported in this demo: <strong>say</strong>, <strong>get &lt;var&gt;</strong>, and <strong>calc &lt;expression&gt;</strong>.</p>
      </aside>
    </section>

    <section id="try" class="card">
      <h3>Try Vik — live</h3>
      <div class="editor">
        <textarea id="vikcode" spellcheck="false">// Try Vik demo
say Welcome to Vik!
get name
say Hello, {name} — now try a calculation:
calc 8 + 7 * 2
</textarea>

        <div class="runbar">
          <button class="btn" onclick="runVik()">Run ▶</button>
          <button class="btn" onclick="clearOutput()">Clear</button>
          <button class="btn" onclick="loadExample()">Load Example</button>
          <div style="flex:1"></div>
          <div style="font-size:12px;color:var(--muted)">Output:</div>
        </div>

        <div id="output" class="output" aria-live="polite"></div>
      </div>
    </section>

    <section class="grid">
      <div class="card" id="docs">
        <h3>Docs</h3>
        <p class="muted">Core ideas | Syntax examples | Tutorials</p>
        <ul style="color:var(--neon);font-size:13px">
          <li><strong>say &lt;text&gt;</strong> — prints text. Use <code>{var}</code> to inject variables.</li>
          <li><strong>get &lt;name&gt;</strong> — prompts user and stores in variable.</li>
          <li><strong>calc &lt;expr&gt;</strong> — evaluate arithmetic expression.</li>
        </ul>
        <p class="muted">Full docs: replace this card with your real docs link.</p>
      </div>

      <div class="card" id="community">
        <h3>Community</h3>
        <p class="muted">Join the chat, share scripts, and get help.</p>
        <div style="display:flex;gap:8px;flex-wrap:wrap;margin-top:8px">
          <a class="nav-link" href="#" onclick="alert('Community link placeholder')">Discord</a>
          <a class="nav-link" href="#" onclick="alert('Community link placeholder')">Forum</a>
          <a class="nav-link" href="#" onclick="alert('Community link placeholder')">GitHub</a>
        </div>
      </div>

      <div class="card">
        <h3>Vik IDE</h3>
        <p class="muted">A minimal IDE for building and running Vik scripts — desktop and mobile-ready. Features: Run, Save, Load, and Blocks-based editor (planned).</p>
        <a class="nav-link" href="#" onclick="alert('IDE demo placeholder')">Open IDE</a>
      </div>
    </section>

    <footer>
      <div>
        <small>Made with ♥ — Vik • build: 2025-09</small>
      </div>
      <div style="display:flex;gap:10px;align-items:center">
        <small class="muted">Theme</small>
        <button class="btn" onclick="toggleTheme()">Toggle</button>
      </div>
    </footer>
  </div>

<script>
  // Simple demo interpreter
  // Supports:
  // say TEXT (supports {var} substitution)
  // get NAME (prompts user and stores into variables)
  // calc EXPR (basic arithmetic using + - * / and parentheses)
  (function(){
    window.vikState = {vars:{}};
  })();

  function safeEvalExpression(expr){
    // Allow only numbers, spaces, parentheses and +-*/. and Math functions blocked.
    // Very small sandbox: remove unwanted characters
    const allowed = /^[0-9+\-*/().\s]+$/;
    if(!allowed.test(expr)) throw new Error('Expression contains disallowed characters.');
    // evaluate
    try{
      // eslint-disable-next-line no-new-func
      const res = Function('"use strict"; return (' + expr + ')')();
      if(typeof res === 'number' && Number.isFinite(res)) return res;
      throw new Error('Invalid numeric result');
    } catch(e){
      throw new Error('Calc error: ' + e.message);
    }
  }

  async function runVik(){
    const code = document.getElementById('vikcode').value;
    const outputEl = document.getElementById('output');
    outputEl.textContent = '';
    window.vikState.vars = window.vikState.vars || {};
    const lines = code.split(/\r?\n/).map(l=>l.trim()).filter(Boolean);
    for(let i=0;i<lines.length;i++){
      const line = lines[i];
      try{
        if(line.toLowerCase().startsWith('say ')){
          const payload = line.slice(4).trim();
          const text = substituteVars(payload);
          appendOut(text);
        } else if(line.toLowerCase().startsWith('get ')){
          const name = line.slice(4).trim().split(/\s+/)[0] || 'input';
          const val = prompt('Input for ' + name + ':') || '';
          window.vikState.vars[name] = val;
        } else if(line.toLowerCase().startsWith('calc ')){
          const expr = line.slice(5).trim();
          const result = safeEvalExpression(expr);
          appendOut(String(result));
        } else {
          appendOut('[unknown] ' + line);
        }
      } catch(err){
        appendOut('[error] ' + err.message);
      }
      // small pause to emulate runtime
      await sleep(40);
    }
  }

  function substituteVars(text){
    return text.replace(/\{([a-zA-Z_][a-zA-Z0-9_]*)\}/g, (m,name)=>{
      return (window.vikState.vars && window.vikState.vars[name] !== undefined) ? window.vikState.vars[name] : '{'+name+'}';
    });
  }

  function appendOut(t){
    const out = document.getElementById('output');
    out.textContent += t + "\\n";
    out.scrollTop = out.scrollHeight;
  }

  function clearOutput(){
    document.getElementById('output').textContent = '';
  }

  function loadExample(){
    document.getElementById('vikcode').value = [
      "say Welcome to Vik!",
      "get name",
      "say Hello, {name}",
      "say Let's do math:",
      "calc (12 + 8) * 2"
    ].join('\\n');
  }

  function sleep(ms){ return new Promise(res=>setTimeout(res,ms)); }

  // small theme toggle (inverts neon to cyan for fun)
  let alt = false;
  function toggleTheme(){
    alt = !alt;
    if(alt){
      document.documentElement.style.setProperty('--neon','#7FFFD4');
      document.documentElement.style.setProperty('--muted','#7aa');
    } else {
      document.documentElement.style.setProperty('--neon','#39FF14');
      document.documentElement.style.setProperty('--muted','#4a4a4a');
    }
  }

  // keyboard shortcut: ctrl+enter to run
  document.getElementById('vikcode').addEventListener('keydown', function(e){
    if((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
      e.preventDefault();
      runVik();
    }
  });
</script>
</body>
</html>